<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/aop
      	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      	http://www.springframework.org/schema/tx
      	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


    <jpa:repositories base-package="com.sr.demo"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.sr.demo.entity"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!--指定实现JPA的适配器-->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
    </bean>


    <bean id="poolDataSource" abstract="true">
        <property name="maxActive" value="100"/>
        <!-- 连接池的最大数据库连接数。设为0表示无限制。 -->
        <property name="initialSize" value="10"/>
        <!-- 初始化连接数量 -->
        <property name="maxWait" value="10000"/>
        <!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。 -->
        <property name="removeAbandonedTimeout" value="60"/>
        <!--自我中断时间秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <!--连接的超时时间，默认为半小时。-->
        <property name="minIdle" value="10"/>
        <!-- 最小等待连接中的数量,设 0 为没有限制 -->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
        <property name="jmxEnabled" value="true"/>
        <!-- 注册池JMX。的默认值是true。-->
        <property name="testWhileIdle" value="false"/>
        <!--默认值是false,当连接池中的空闲连接是否有效 -->
        <property name="testOnBorrow" value="true"/>
        <!-- 默认值是true，当从连接池取连接时，验证这个连接是否有效-->
        <property name="validationInterval" value="30000"/>
        <!--检查连接死活的时间间隔（单位：毫妙） 0以下的话不检查。默认是0。 -->
        <property name="testOnReturn" value="false"/>
        <!--默认值是flase,当从把该连接放回到连接池的时，验证这个连接是 -->
        <property name="validationQuery" value="select 1"/>
        <!--一条sql语句，用来验证数据库连接是否正常。这条语句必须是一个查询模式，并至少返回一条数据。可以为任何可以验证数据库连接是否正常的sql-->
        <property name="logAbandoned" value="true"/>
        <!--是否记录中断事件， 默认为 false-->
        <property name="removeAbandoned" value="true"/>
        <!-- 是否自动回收超时连接-->
        <!--这些拦截器将被插入到链中的一个java.sql.Connection对象的操作都是以拦截器。默认值是空的。
              预定义的拦截器：
              org.apache.tomcat.jdbc.pool.interceptor.ConnectionState - 跟踪自动提交，只读目录和事务隔离级别。
              org.apache.tomcat.jdbc.pool.interceptor.tatementFinalizer - 跟踪打开的语句，并关闭连接时返回到池中。-->
        <property name="jdbcInterceptors"
                  value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>
    </bean>

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close" parent="poolDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!-- 配置JPA事务管理器 -->
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 声明通过注解来配置事务管理 -->
    <tx:annotation-driven transaction-manager="txManager"/>


    <!-- 声明使用Aspect注解来配置AOP -->
    <aop:aspectj-autoproxy/>

</beans>